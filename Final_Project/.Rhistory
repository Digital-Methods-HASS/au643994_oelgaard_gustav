#x <- c("ggmap", "rgdal", "rgeos", "maptools", "dplyr", "tidyr", "tmap")
#install.packages(x)
#install.packages("sf")
#install.packages("tidyverse")
#install.packages("tidygeocoder")
#install.packages("spatialEco")
#install.packages("gganimate")
#install.packages("gifski")
#install.packages('png')
#devtools::install_github("thomasp85/transformr")
library(tidyverse)
x <- c("ggmap", "rgdal", "rgeos", "maptools", "dplyr", "tidyr", "tmap")
install.packages(x)
install.packages("sf")
install.packages("tidyverse")
install.packages("tidygeocoder")
install.packages("spatialEco")
install.packages("gganimate")
install.packages("gifski")
install.packages('png')
devtools::install_github("thomasp85/transformr")
library(tidyverse)
library(spatialEco)
devtools::install_github("thomasp85/transformr")
library(sf)
lapply(x, library, character.only = TRUE)
library(rgdal)
library(raster)
library(lubridate)
library(tidygeocoder)
library(gganimate)
library(gifski)
library(png)
library(transformr)
devtools::install_github("thomasp85/transformr")
install.packages("devtools")
devtools::install_github("thomasp85/transformr")
devtools::install_github("thomasp85/transformr")
#x <- c("ggmap", "rgdal", "rgeos", "maptools", "dplyr", "tidyr", "tmap")
#install.packages(x)
#install.packages("sf")
#install.packages("devtools")
#install.packages("tidyverse")
#install.packages("tidygeocoder")
#install.packages("spatialEco")
#install.packages("gganimate")
#install.packages("gifski")
#install.packages('png')
#devtools::install_github("thomasp85/transformr")
library(devtools)
library(tidyverse)
library(spatialEco)
library(sf)
lapply(x, library, character.only = TRUE)
library(rgdal)
library(raster)
library(lubridate)
library(tidygeocoder)
library(gganimate)
library(gifski)
library(png)
library(transformr)
#x <- c("ggmap", "rgdal", "rgeos", "maptools", "dplyr", "tidyr", "tmap")
#install.packages(x)
#install.packages("sf")
#install.packages("devtools")
#install.packages("tidyverse")
#install.packages("tidygeocoder")
#install.packages("spatialEco")
#install.packages("gganimate")
#install.packages("gifski")
#install.packages('png')
#devtools::install_github("thomasp85/transformr")
library(devtools)
library(tidyverse)
library(spatialEco)
library(sf)
lapply(x, library, character.only = TRUE)
library(rgdal)
library(raster)
library(lubridate)
library(tidygeocoder)
library(gganimate)
library(gifski)
library(png)
faldne <- read_csv("NEW-Faldne-udsendes.csv")
#We will start by downloading only the borders of Germany and Denmark. This can be done by setting the level parameter to 0.
Denmark <- getData(name = "GADM", country="DNK", level=0) #This will download a map of Denmark.
Germany <- getData(name = "GADM", country="DEU", level=0) #This will download a map of Germany.
#Next we will download the municipalities of Schleswig.
DNK_2 <- getData(name = "GADM", country="DNK", level=2) #This will download a map of the modern municipalities of Denmark.
DEU_2 <- getData(name = "GADM", country="DEU", level=2) #This will download a map of the modern municipalities of Germany.
#When downloading our map data, we also need to transform them to the correct type.
Denmark <- st_as_sf(Denmark)
Germany <- st_as_sf(Germany)
DNK_2 <- st_as_sf(DNK_2)
DEU_2 <- st_as_sf(DEU_2)
#As we're only interested in Schleswig we need to further filter some of our maps, before combining them to a single spatial map of the region.
DNK_2_SH <- DNK_2 %>% #First we select the modern region of Syddanmark.
filter(NAME_1 == "Syddanmark")
x <- c("Esbjerg", "Haderslev", "Kolding", "Sønderborg", "Tønder", "Vejen", "Aabenraa") #Then we select the relevant municipalities...
DNK_2_SH <- DNK_2_SH %>%
filter(NAME_2 %in% x) %>%  #...before filtering our dataframe.
select(c(7,14)) %>% #To properly combine the dataframe with our German map, we also filter out all but two coloumns: NAME_2 and geometry.
rename(navn = NAME_2) #We also rename the NAME_2 coloumn to "name"
library(sf)
DEU_2_SH <- DEU_2 %>%
filter(NAME_1 == "Schleswig-Holstein") %>%
select(c(7,14)) %>%
filter(NAME_2 %in% y) %>%
rename(navn = NAME_2)
View(DEU_2)
class(DEU_2)
DEU_2 <- st_as_sf(DEU_2)
DEU_2_SH <- DEU_2 %>%
filter(NAME_1 == "Schleswig-Holstein") %>%
select(c(7,14)) %>%
filter(NAME_2 %in% y) %>%
rename(navn = NAME_2)
library(tidyverse)
DEU_2_SH <- DEU_2 %>%
filter(NAME_1 == "Schleswig-Holstein") %>%
select(c(7,14)) %>%
filter(NAME_2 %in% y) %>%
rename(navn = NAME_2)
library(sf)
library(raster)
DEU_2_SH <- DEU_2 %>%
filter(NAME_1 == "Schleswig-Holstein") %>%
select(c(7,14)) %>%
filter(NAME_2 %in% y) %>%
rename(navn = NAME_2)
DEU_2 <- st_transform(DEU_2)
DEU_2_SH <- DEU_2 %>%
filter(NAME_1 == "Schleswig-Holstein") %>%
select(c(7,14)) %>%
filter(NAME_2 %in% y) %>%
rename(navn = NAME_2)
DNK_2_SH <- DNK_2_SH %>%
filter(NAME_2 %in% x) %>%  #...before filtering our dataframe.
select(c(7,14)) %>% #To properly combine the dataframe with our German map, we also filter out all but two coloumns: NAME_2 and geometry.
rename(navn = NAME_2) #We also rename the NAME_2 coloumn to "name"
DNK_2_SH <- DNK_2_SH %>%
filter(NAME_2 %in% x) %>%  #...before filtering our dataframe.
select(c(7,14)) %>% #To properly combine the dataframe with our German map, we also filter out all but two coloumns: NAME_2 and geometry.
rename(navn = NAME_2) #We also rename the NAME_2 coloumn to "name"
DNK_2_SH <- DNK_2_SH %>%
filter(NAME_2 %in% x) %>%  #...before filtering our dataframe.
select(c(7,14)) %>% #To properly combine the dataframe with our German map, we also filter out all but two coloumns: NAME_2 and geometry.
rename(navn = NAME_2) #We also rename the NAME_2 coloumn to "name"
library(transformr)
#x <- c("ggmap", "rgdal", "rgeos", "maptools", "dplyr", "tidyr", "tmap")
#install.packages(x)
#install.packages("sf")
#install.packages("devtools")
#install.packages("tidyverse")
#install.packages("tidygeocoder")
#install.packages("spatialEco")
#install.packages("gganimate")
#install.packages("gifski")
#install.packages('png')
devtools::install_github("thomasp85/transformr")
library(transformr)
x <- c("ggmap", "rgdal", "rgeos", "maptools", "dplyr", "tidyr", "tmap")
install.packages(x)
install.packages("sf")
install.packages("devtools")
install.packages("tidyverse")
install.packages("tidygeocoder")
